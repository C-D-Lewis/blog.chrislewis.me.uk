{
  "title": "ColorLayer for Pebble",
  "fileName": "2014-07-29-ColorLayer-for-Pebble.md",
  "dateTime": "2014-07-29 14:55:30",
  "tags": [
    "Pebble"
  ],
  "components": [
    {
      "type": "paragraph",
      "text": "<strong>Edit: 100th post!"
    },
    {
      "type": "paragraph",
      "text": "Quick post to share Â a 'new' <code>Layer</code> type I created for an upcoming project: <code>ColorLayer</code>. It's supposed to be a convenience for adding a simple layer of colour. Problem is, unless I'm missing something very obvious, the two options are to declare a standard <code>Layer</code> and assign it a basic <code>_fill_rect()</code> <code>LayerUpdateProc</code>, or use a <code>TextLayer</code> and modifying the background colours."
    },
    {
      "type": "paragraph",
      "text": "I normally choose the latter, so for the umpteenth time of doing so I decided to wrap it up to make it a bit simpler to use. Here's the result!"
    },
    {
      "type": "header",
      "level": 6,
      "text": "ColorLayer.h\n<div class=\"lang-label lang-cpp\">C++</div>\n<pre><div class=\"code-block\">\n<span class=\"comment\">/**</span>\n<span class=\"comment\"> * Layer on top of TextLayer used just for coloring areas without using LayerUpdateProc</span>\n<span class=\"comment\"> * Author: Chris Lewis (@Chris_DL)</span>\n<span class=\"comment\"> * Version 1.0.0</span>\n<span class=\"comment\"> */</span>\n#<span class=\"js-keyword\">include </span>\n\n#<span class=\"js-keyword\">if</span>ndef COLOR_LAYER_H\n#<span class=\"js-keyword\">define</span> COLOR_LAYER_H\n\ntypedef <span class=\"js-blueword\">struct </span><span class=\"js-syntax\">{</span>\n  TextLayer *layer<span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span> ColorLayer<span class=\"js-syntax\">;</span>\n\nColorLayer* color_layer_create<span class=\"js-syntax\">(</span>GRect bounds<span class=\"js-syntax\">,</span> GColor fill_color<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-blueword\">void </span>color_layer_destroy<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-blueword\">void </span>color_layer_set_color<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">,</span> GColor fill_color<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-blueword\">void </span>color_layer_set_frame<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">,</span> GRect bounds<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\nLayer* color_layer_get_layer<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n\n#end<span class=\"js-keyword\">if</span>\n</div></pre>"
    },
    {
      "type": "header",
      "level": 3,
      "text": "ColorLayer.c\n<div class=\"lang-label lang-cpp\">C++</div>\n<pre><div class=\"code-block\">\n#<span class=\"js-keyword\">include </span><span class=\"_string\">\"color_layer.h\"</span>\n\nColorLayer* color_layer_create<span class=\"js-syntax\">(</span>GRect bounds<span class=\"js-syntax\">,</span> GColor fill_color<span class=\"js-syntax\">)</span>\n<span class=\"js-syntax\">{</span>\n  ColorLayer *this<span class=\"js-keyword\"> = </span>malloc<span class=\"js-syntax\">(</span>sizeof<span class=\"js-syntax\">(</span>ColorLayer<span class=\"js-syntax\">)</span><span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n  this<span class=\"js-keyword\">-></span>layer<span class=\"js-keyword\"> = </span>text_layer_create<span class=\"js-syntax\">(</span>bounds<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n  text_layer_set_background_color<span class=\"js-syntax\">(</span>this<span class=\"js-keyword\">-></span>layer<span class=\"js-syntax\">,</span> fill_color<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n\n  <span class=\"js-keyword\">return </span>this<span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span>\n\n<span class=\"js-blueword\">void </span>color_layer_destroy<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">)</span>\n<span class=\"js-syntax\">{</span>\n  text_layer_destroy<span class=\"js-syntax\">(</span>this<span class=\"js-keyword\">-></span>layer<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n  free<span class=\"js-syntax\">(</span>this<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span>\n\n<span class=\"js-blueword\">void </span>color_layer_set_color<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">,</span> GColor fill_color<span class=\"js-syntax\">)</span>\n<span class=\"js-syntax\">{</span>\n  text_layer_set_background_color<span class=\"js-syntax\">(</span>this<span class=\"js-keyword\">-></span>layer<span class=\"js-syntax\">,</span> fill_color<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span>\n\n<span class=\"js-blueword\">void </span>color_layer_set_frame<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">,</span> GRect bounds<span class=\"js-syntax\">)</span>\n<span class=\"js-syntax\">{</span>\n  layer_set_frame<span class=\"js-syntax\">(</span>text_layer_get_layer<span class=\"js-syntax\">(</span>this<span class=\"js-keyword\">-></span>layer<span class=\"js-syntax\">)</span><span class=\"js-syntax\">,</span> bounds<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span>\n\nLayer* color_layer_get_layer<span class=\"js-syntax\">(</span>ColorLayer *this<span class=\"js-syntax\">)</span>\n<span class=\"js-syntax\">{</span>\n  <span class=\"js-keyword\">return </span>text_layer_get_layer<span class=\"js-syntax\">(</span>this<span class=\"js-keyword\">-></span>layer<span class=\"js-syntax\">)</span><span class=\"js-syntax\">;</span>\n<span class=\"js-syntax\">}</span>\n</div></pre>"
    },
    {
      "type": "paragraph",
      "text": "It could be argued that it's such a thin layer you may as well not bother, but I find it to be sufficiently easier to setup and read (as well as avoiding confusion with <code>TextLayer</code>s that actually show text), so once again I'm glad coding allows a degree of personal preference and style!"
    }
  ]
}